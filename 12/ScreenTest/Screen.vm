function Screen.init 2
push constant 16384
pop static 0
push constant 0
not
pop static 1
push constant 16
call Array.new 1
pop static 2
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push static 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 3
push static 0
push argument 1
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
add
push argument 0
shiftright
shiftright
shiftright
shiftright
add
pop local 0
push argument 0
push constant 15
and
pop local 1
push local 0
call Memory.peek 1
pop local 2
push local 2
push local 1
push static 2
add
pop pointer 1
push that 0
not
and
push local 1
push static 2
add
pop pointer 1
push that 0
push static 1
and
or
pop local 2
push local 0
push local 2
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 9
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontalLine 3
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
pop local 7
push argument 2
pop argument 0
push local 7
pop argument 2
push argument 1
pop local 7
push argument 3
pop argument 1
push local 7
pop argument 3
label IF_FALSE1
push argument 1
push argument 3
gt
pop local 8
push local 8
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
neg
pop argument 1
push argument 3
neg
pop argument 3
label IF_FALSE2
push argument 0
pop local 0
push argument 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push argument 2
push argument 0
sub
pop local 5
push argument 3
push argument 1
sub
pop local 6
label WHILE_EXP0
push local 2
push local 5
push constant 1
add
lt
push local 3
push local 6
push constant 1
add
lt
and
not
if-goto WHILE_END0
push local 8
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 2
add
push local 1
push local 3
add
neg
call Screen.drawPixel 2
pop temp 0
goto IF_END3
label IF_FALSE3
push local 0
push local 2
add
push local 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
label IF_END3
push local 4
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 2
push constant 1
add
pop local 2
push local 4
push local 6
add
pop local 4
goto IF_END4
label IF_FALSE4
push local 3
push constant 1
add
pop local 3
push local 4
push local 5
sub
pop local 4
label IF_END4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawHorizontalLine 6
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop local 5
push argument 1
pop argument 0
push local 5
pop argument 1
label IF_FALSE0
push static 0
push argument 2
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
add
push argument 0
shiftright
shiftright
shiftright
shiftright
add
pop local 0
push static 0
push argument 2
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
add
push argument 1
shiftright
shiftright
shiftright
shiftright
add
pop local 2
push argument 0
push constant 15
and
pop local 1
push argument 1
push constant 15
and
pop local 3
push local 0
push local 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Memory.peek 1
pop local 4
push local 1
call Screen.nOnesMask 1
not
push local 1
push static 2
add
pop pointer 1
push that 0
or
push local 3
call Screen.nOnesMask 1
and
pop local 5
push local 4
push local 5
not
and
push local 5
push static 1
and
or
pop local 4
push local 0
push local 4
call Memory.poke 2
pop temp 0
push constant 0
return
label IF_FALSE1
push local 0
call Memory.peek 1
pop local 4
push local 1
call Screen.nOnesMask 1
not
push local 1
push static 2
add
pop pointer 1
push that 0
or
pop local 5
push local 4
push local 5
not
and
push local 5
push static 1
and
or
pop local 4
push local 0
push local 4
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
label WHILE_EXP0
push local 0
push local 2
lt
not
if-goto WHILE_END0
push local 0
push static 1
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
call Memory.peek 1
pop local 4
push local 3
call Screen.nOnesMask 1
pop local 5
push local 4
push local 5
not
and
push local 5
push static 1
and
or
pop local 4
push local 2
push local 4
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.nOnesMask 0
push argument 0
push static 2
add
pop pointer 1
push that 0
shiftleft
push constant 1
sub
return
function Screen.drawRectangle 0
push constant 0
return
function Screen.drawCircle 0
push constant 0
return
