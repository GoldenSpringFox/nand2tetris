function Main.main 0
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 1
push constant 1
neg
pop local 0
label WHILE Main.convert.0
neg
if-goto WHILE_END Main.convert.0
push constant 1
add
pop local 0
call Main.nextMask 1
pop local 0
push constant 16
gt
not
neg
if-goto IF_FALSE_Main.convert.0
and
push constant 0
eq
not
neg
if-goto IF_FALSE_Main.convert.0
push constant 8000
add
push constant 1
call Memory.poke 2
pop temp 0
goto IF_END_Main.convert.0
label IF_FALSE_Main.convert.0
push constant 8000
add
push constant 0
call Memory.poke 2
pop temp 0
label IF_END_Main.convert.0
goto IF_END_Main.convert.1
label IF_FALSE_Main.convert.1
push constant 0
pop local 0
label IF_END_Main.convert.1
goto WHILE Main.convert.0
label WHILE_END Main.convert.0
push constant 0
return
function Main.nextMask 1
push constant 0
eq
neg
if-goto IF_FALSE_Main.nextMask.2
push constant 1
return
goto IF_END_Main.nextMask.2
label IF_FALSE_Main.nextMask.2
push constant 2
call Math.multiply 2
return
label IF_END_Main.nextMask.2
function Main.fillMemory 3
label WHILE Main.fillMemory.1
push constant 0
gt
neg
if-goto WHILE_END Main.fillMemory.1
call Memory.poke 2
pop temp 0
push constant 1
sub
pop argument 0
push constant 1
add
pop argument 0
goto WHILE Main.fillMemory.1
label WHILE_END Main.fillMemory.1
push constant 0
return
