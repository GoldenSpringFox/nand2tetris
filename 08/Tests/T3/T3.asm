// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
AM=M-1
D=M
@FIRST_NEG0
D;JLT
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_POS0
D;JLT
@REGULAR_COMPARISON0
0;JMP
(FIRST_NEG0)
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_NEG0
D;JLT
@SP
A=M-1
M=0
@COMP_END0
0;JMP
(SECOND_NEG_FIRST_POS0)
@SP
A=M-1
M=-1
@COMP_END0
0;JMP
(SECOND_NEG_FIRST_NEG0)
@REGULAR_COMPARISON0
0;JMP
(REGULAR_COMPARISON0)
@SP
A=M
D=M
A=A-1
D=M-D
@COMP_SUCCESS0
D;JLT
@SP
A=M-1
M=0
@COMP_END0
0;JMP
(COMP_SUCCESS0)
@SP
A=M-1
M=-1
(COMP_END0)
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// gt
@SP
AM=M-1
D=M
@FIRST_NEG1
D;JLT
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_POS1
D;JLT
@REGULAR_COMPARISON1
0;JMP
(FIRST_NEG1)
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_NEG1
D;JLT
@SP
A=M-1
M=-1
@COMP_END1
0;JMP
(SECOND_NEG_FIRST_POS1)
@SP
A=M-1
M=0
@COMP_END1
0;JMP
(SECOND_NEG_FIRST_NEG1)
@REGULAR_COMPARISON1
0;JMP
(REGULAR_COMPARISON1)
@SP
A=M
D=M
A=A-1
D=M-D
@COMP_SUCCESS1
D;JGT
@SP
A=M-1
M=0
@COMP_END1
0;JMP
(COMP_SUCCESS1)
@SP
A=M-1
M=-1
(COMP_END1)
// push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
AM=M-1
D=M
@FIRST_NEG2
D;JLT
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_POS2
D;JLT
@REGULAR_COMPARISON2
0;JMP
(FIRST_NEG2)
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_NEG2
D;JLT
@SP
A=M-1
M=-1
@COMP_END2
0;JMP
(SECOND_NEG_FIRST_POS2)
@SP
A=M-1
M=0
@COMP_END2
0;JMP
(SECOND_NEG_FIRST_NEG2)
@REGULAR_COMPARISON2
0;JMP
(REGULAR_COMPARISON2)
@SP
A=M
D=M
A=A-1
D=M-D
@COMP_SUCCESS2
D;JGT
@SP
A=M-1
M=0
@COMP_END2
0;JMP
(COMP_SUCCESS2)
@SP
A=M-1
M=-1
(COMP_END2)
// push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// gt
@SP
AM=M-1
D=M
@FIRST_NEG3
D;JLT
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_POS3
D;JLT
@REGULAR_COMPARISON3
0;JMP
(FIRST_NEG3)
@SP
A=M-1
D=M
@SECOND_NEG_FIRST_NEG3
D;JLT
@SP
A=M-1
M=-1
@COMP_END3
0;JMP
(SECOND_NEG_FIRST_POS3)
@SP
A=M-1
M=0
@COMP_END3
0;JMP
(SECOND_NEG_FIRST_NEG3)
@REGULAR_COMPARISON3
0;JMP
(REGULAR_COMPARISON3)
@SP
A=M
D=M
A=A-1
D=M-D
@COMP_SUCCESS3
D;JGT
@SP
A=M-1
M=0
@COMP_END3
0;JMP
(COMP_SUCCESS3)
@SP
A=M-1
M=-1
(COMP_END3)
